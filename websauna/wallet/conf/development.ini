# pserve and command line configuration for a local development machine

[includes]
include_ini_files =
    resource://websauna/conf/development.ini
    resource://websauna/conf/base.ini

[app:main]
use = egg:websauna.wallet

websauna.init = websauna.wallet.demo.Initializer
websauna.site_id = wallet_demo
websauna.site_email_prefix = [wallet TEST]
sqlalchemy.url = postgresql://localhost/wallet_demo
websauna.secrets_file = resource://websauna.wallet/conf/development-secrets.ini
websauna.test_web_server_port = 8533

ethereum.ethjsonrpc.host = localhost
ethereum.ethjsonrpc.port = 8545
ethereum.daemon_poll_seconds = 2

xethereum.network_configuration =
    {
        "testnet": {
            "host": "127.0.0.1",
            "port": 9002,
            "private_geth": true,
            "coinbase_password":
            "this-is-not-a-secure-password",
            "p2p_port": 35002
        }
    }


ethereum.network_configuration =
    {
        "ethereum": {
            "host": "127.0.0.1",
            "port": 9001,
            "private_geth": true,
            "coinbase_password": "this-is-not-a-secure-password",
            "p2p_port": 35001
        },
        "testnet": {
            "host": "127.0.0.1",
            "port": 9002,
            "private_geth": true,
            "coinbase_password":
            "this-is-not-a-secure-password",
            "p2p_port": 35002
        },
        "private testnet": {
            "host": "127.0.0.1",
            "port": 9003,
            "private_geth": true,
            "coinbase_password": "this-is-not-a-secure-password",
            "p2p_port": 35003
        }
    }

ethereum.chains_dir = chains

# Setup file + colored stdout logging
[loggers]
keys = root, sqlalchemy, chameleon, transaction, pyramid_debug, notebook, colander, urllib3

[handlers]
keys = console, logfile

# Supress _make_request] "POST / HTTP/1.1" 200 45
[logger_urllib3]
qualname = requests.packages.urllib3.connectionpool
level = WARN
handlers =

[handler_logfile]
class=handlers.TimedRotatingFileHandler
# Hold logs for 3 months, rotated every monday
args=('ethereum-service.log','W0',1,12)
level = DEBUG
formatter = generic

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_transaction]
level = WARN
handlers =
qualname = txn
